##https://aka.ms/vs/17/release/vc_redist.arm64.exe
Description: Creates .bes file for MATLAB full install dmg and uploads it to the console.
Identifier: com.github.iancohn.download.VCRedistributable-Win
MinimumVersion: 2.3.0
Input:
  NAME: Visual C++ Redistributable
  ARCH: 'x64'
  USER_AGENT: Mozilla/5.0 (Windows NT 6.3; Win64, x64; Trident/7.0; rv:11.0) like Gecko
Process:
- Processor: URLDownloader
  Arguments:
    url: https://aka.ms/vs/17/release/vc_redist.%ARCH%.exe
    request_headers:
      user-agent: "%USER_AGENT%"
- Processor: com.github.hansen-m.SharedProcessors/HachoirMetaDataProvider
- Processor: StopProcessingIf
  Arguments:
    predicate: |
      True == True
# Create BES file for SysMan
- Processor: AutoPkgBESEngine
  Arguments:
    bes_actions:
      '1':
        ActionName: DefaultAction
        ActionNumber: Action1
        ActionScript: |
          
          // Confirm license purchase
          action parameter query "acknowledgeLicense" with description "By entering anything into this box, you acknowledge that required licenses have been purchased from Software @ PSU." AND WITH DEFAULT VALUE ""
          continue if {parameter "acknowledgeLicense" of action != ""}
          
          // Set variables
          parameter "tmpFolderName"="%short_release%"
          parameter "tmpFolderPath"="{"/tmp/" & (parameter "tmpFolderName" of action)}"
          
          parameter "licensePath"="{(parameter "tmpFolderPath" of action) & "/network.lic"}"
          parameter "inputsPath"="{(parameter "tmpFolderPath" of action) & "/inputs.txt"}"
          parameter "logPath"="{(parameter "tmpFolderPath" of action) & "/matlab_install.log"}"
          parameter "finalLogPath"="{((pathname of folder "__Global/Logs" of parent folder of client folder of current site) & "/matlab_install" & (((year of it as string) & (month of it as two digits as string ) & (day_of_month of it as two digits as string)) of date (local time zone) of now) & ".log") }"
          
          // Copy dmg contents to tmp folder
          folder delete "{parameter "tmpFolderPath" of action}"
          folder create "{parameter "tmpFolderPath" of action}"
          
          wait /usr/bin/hdiutil attach -quiet -nobrowse -noverify "__Download/%bes_filename%" -mountpoint "/Volumes/%short_release%"
          wait /bin/cp -Rfp "/Volumes/%short_release%" "/tmp"
          
          wait /usr/bin/hdiutil detach -force "/Volumes/%short_release%"
          
          // Delete dmg to free up space prior to installing
          delete "__Download/%bes_filename%"
          
          // Create network license
          action uses file encoding us-ascii
          appendfile SERVER S9-MATHLM1.ad.psu.edu 005056918B99 27000
          appendfile USE_SERVER
          appendfile
          
          // Move License file to tmp folder
          delete {parameter "licensePath" of action}
          move __appendfile {parameter "licensePath" of action}
          
          
          // Create Installer_Inputs
          createfile until ___EOF___
          
          destinationFolder=/Applications
          fileInstallationKey=%file_installation_key%
          agreeToLicense=yes
          outputFile={parameter "logPath" of action}
          licensePath={parameter "licensePath" of action}
          mode=silent
          automatedModeTimeout=1500
          lmgrFiles=false
          lmgrService=false
          
          ## The following features will be installed
          
          #product.5G_Toolbox
          #product.AUTOSAR_Blockset
          #product.Aerospace_Blockset
          #product.Aerospace_Toolbox
          #product.Antenna_Toolbox
          #product.Audio_Toolbox
          #product.Automated_Driving_Toolbox
          #product.Bioinformatics_Toolbox
          #product.Communications_Toolbox
          #product.Computer_Vision_Toolbox
          #product.Control_System_Toolbox
          #product.Curve_Fitting_Toolbox
          #product.DDS_Blockset
          #product.DO_Qualification_Kit
          #product.DSP_System_Toolbox
          #product.Data_Acquisition_Toolbox
          #product.Database_Toolbox
          #product.Datafeed_Toolbox
          #product.Deep_Learning_HDL_Toolbox
          #product.Deep_Learning_Toolbox
          #product.Econometrics_Toolbox
          #product.Embedded_Coder
          #product.Filter_Design_HDL_Coder
          #product.Financial_Instruments_Toolbox
          #product.Financial_Toolbox
          #product.Fixed-Point_Designer
          #product.Fuzzy_Logic_Toolbox
          #product.GPU_Coder
          #product.Global_Optimization_Toolbox
          #product.HDL_Coder
          #product.HDL_Verifier
          #product.IEC_Certification_Kit
          #product.Image_Acquisition_Toolbox
          #product.Image_Processing_Toolbox
          #product.Instrument_Control_Toolbox
          #product.LTE_Toolbox
          #product.Lidar_Toolbox
          #product.MATLAB
          #product.MATLAB_Coder
          #product.MATLAB_Compiler
          #product.MATLAB_Compiler_SDK
          #product.MATLAB_Parallel_Server
          #product.MATLAB_Production_Server
          #product.MATLAB_Report_Generator
          #product.MATLAB_Web_App_Server
          #product.Mapping_Toolbox
          #product.Mixed-Signal_Blockset
          #product.Model_Predictive_Control_Toolbox
          #product.Model-Based_Calibration_Toolbox
          #product.Motor_Control_Blockset
          #product.Navigation_Toolbox
          #product.OPC_Toolbox
          #product.Optimization_Toolbox
          #product.Parallel_Computing_Toolbox
          #product.Partial_Differential_Equation_Toolbox
          #product.Phased_Array_System_Toolbox
          #product.Polyspace_Bug_Finder
          #product.Polyspace_Bug_Finder_Server
          #product.Polyspace_Code_Prover
          #product.Polyspace_Code_Prover_Server
          #product.Powertrain_Blockset
          #product.Predictive_Maintenance_Toolbox
          #product.RF_Blockset
          #product.RF_Toolbox
          #product.ROS_Toolbox
          #product.Radar_Toolbox
          #product.Reinforcement_Learning_Toolbox
          #product.Risk_Management_Toolbox
          #product.Robotics_System_Toolbox
          #product.Robust_Control_Toolbox
          #product.Satellite_Communications_Toolbox
          #product.Sensor_Fusion_and_Tracking_Toolbox
          #product.SerDes_Toolbox
          #product.Signal_Processing_Toolbox
          #product.SimBiology
          #product.SimEvents
          #product.Simscape
          #product.Simscape_Driveline
          #product.Simscape_Electrical
          #product.Simscape_Fluids
          #product.Simscape_Multibody
          #product.Simulink
          #product.Simulink_3D_Animation
          #product.Simulink_Check
          #product.Simulink_Code_Inspector
          #product.Simulink_Coder
          #product.Simulink_Compiler
          #product.Simulink_Control_Design
          #product.Simulink_Coverage
          #product.Simulink_Design_Optimization
          #product.Simulink_Design_Verifier
          #product.Simulink_Desktop_Real-Time
          #product.Simulink_PLC_Coder
          #product.Simulink_Real-Time
          #product.Simulink_Report_Generator
          #product.Simulink_Requirements
          #product.Simulink_Test
          #product.SoC_Blockset
          #product.Spreadsheet_Link
          #product.Stateflow
          #product.Statistics_and_Machine_Learning_Toolbox
          #product.Symbolic_Math_Toolbox
          #product.System_Composer
          #product.System_Identification_Toolbox
          #product.Text_Analytics_Toolbox
          #product.UAV_Toolbox
          #product.Vehicle_Dynamics_Blockset
          #product.Vehicle_Network_Toolbox
          #product.Vision_HDL_Toolbox
          #product.WLAN_Toolbox
          #product.Wavelet_Toolbox
          #product.Wireless_HDL_Toolbox
          
          
          ___EOF___
          
          // Move inputs file to tmp folder
          delete "{parameter "inputsPath" of action}"
          move __createfile "{parameter "inputsPath" of action}"
          action uses file encoding local
          wait /usr/bin/touch {parameter "logPath" of action}
          
          // Set permissions on tmp folder
          wait /bin/chmod -R a+x {parameter "tmpFolderPath" of action}
          wait /bin/chmod -R 755 {parameter "tmpFolderPath" of action}
          
          // Run installer
          wait "{(parameter "tmpFolderPath" of action ) & "/install"}" -inputFile "{parameter "inputsPath" of action}"
          
          // Move Log File to BES Logs
          delete "{parameter "finalLogPath" of action}"
          copy "{parameter "logPath" of action}" "{parameter "finalLogPath" of action}"
          
          //Remove tmp folder
          wait /bin/rm -rf "{parameter "tmpFolderPath" of action}"
          
          // Software Sharing Tracking
          wait /bin/sh -c "/usr/bin/defaults write '/Library/Sysman/Sysman' 'Tasks' -array-add 'PSU/Licensed/Software - Install/Upgrade: Mathworks MATLAB %release% - macOS -- Full Install - {(month of it as two digits & "/" & day_of_month of it as two digits & "/" & year of it as string) of date (local time zone) of now}'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman/Sysman.plist'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman'"

        Description:
          - ''
          - Install/Upgrade
          - ' with all available features'
      '2':
        ActionName: Action
        ActionNumber: Action2
        ActionScript: |
          
          // Confirm license purchase
          action parameter query "acknowledgeLicense" with description "By entering anything into this box, you acknowledge that required licenses have been purchased from Software @ PSU." AND WITH DEFAULT VALUE ""
          continue if {parameter "acknowledgeLicense" of action != ""}
          
          // Set variables
          parameter "tmpFolderName"="%short_release%"
          parameter "tmpFolderPath"="{"/tmp/" & (parameter "tmpFolderName" of action)}"
          
          parameter "licensePath"="{(parameter "tmpFolderPath" of action) & "/network.lic"}"
          parameter "inputsPath"="{(parameter "tmpFolderPath" of action) & "/inputs.txt"}"
          parameter "logPath"="{(parameter "tmpFolderPath" of action) & "/matlab_install.log"}"
          parameter "finalLogPath"="{((pathname of folder "__Global/Logs" of parent folder of client folder of current site) & "/matlab_install" & (((year of it as string) & (month of it as two digits as string ) & (day_of_month of it as two digits as string)) of date (local time zone) of now) & ".log") }"
          
          // Copy dmg contents to tmp folder
          folder delete "{parameter "tmpFolderPath" of action}"
          folder create "{parameter "tmpFolderPath" of action}"
          
          wait /usr/bin/hdiutil attach -quiet -nobrowse -noverify "__Download/%bes_filename%" -mountpoint "/Volumes/%short_release%"
          wait /bin/cp -Rfp "/Volumes/%short_release%" "/tmp"
          
          wait /usr/bin/hdiutil detach -force "/Volumes/%short_release%"
          
          // Delete dmg to free up space prior to installing
          delete "__Download/%bes_filename%"
          
          // Create network license
          action uses file encoding us-ascii
          appendfile SERVER S9-MATHLM1.ad.psu.edu 005056918B99 27000
          appendfile USE_SERVER
          appendfile
          
          // Move License file to tmp folder
          delete {parameter "licensePath" of action}
          move __appendfile {parameter "licensePath" of action}
          
          
          // Create Installer_Inputs
          createfile until ___EOF___
          
          destinationFolder=/Applications
          fileInstallationKey=%file_installation_key%
          agreeToLicense=yes
          outputFile={parameter "logPath" of action}
          licensePath={parameter "licensePath" of action}
          mode=silent
          automatedModeTimeout=1500
          lmgrFiles=false
          lmgrService=false
          
          ## The following features will be installed
          
          product.MATLAB
          
          ___EOF___
          
          // Move inputs file to tmp folder
          delete "{parameter "inputsPath" of action}"
          move __createfile "{parameter "inputsPath" of action}"
          action uses file encoding local
          wait /usr/bin/touch {parameter "logPath" of action}
          
          // Set permissions on tmp folder
          wait /bin/chmod -R a+x {parameter "tmpFolderPath" of action}
          wait /bin/chmod -R 755 {parameter "tmpFolderPath" of action}
          
          // Run installer
          wait "{(parameter "tmpFolderPath" of action ) & "/install"}" -inputFile "{parameter "inputsPath" of action}"
          
          // Move Log File to BES Logs
          delete "{parameter "finalLogPath" of action}"
          copy "{parameter "logPath" of action}" "{parameter "finalLogPath" of action}"
          
          //Remove tmp folder
          wait /bin/rm -rf "{parameter "tmpFolderPath" of action}"
          
          // Software Sharing Tracking
          wait /bin/sh -c "/usr/bin/defaults write '/Library/Sysman/Sysman' 'Tasks' -array-add 'PSU/Licensed/Software - Install/Upgrade: Mathworks MATLAB %release% - macOS -- Full Install - {(month of it as two digits & "/" & day_of_month of it as two digits & "/" & year of it as string) of date (local time zone) of now}'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman/Sysman.plist'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman'"
        Description:
          - ''
          - Install/Upgrade
          - ' with no add-on features.'
      '3':
        ActionName: Action
        ActionNumber: Action3
        ActionScript: |
          
          // Confirm license purchase
          action parameter query "acknowledgeLicense" with description "By entering anything into this box, you acknowledge that required licenses have been purchased from Software @ PSU." AND WITH DEFAULT VALUE ""
          continue if {parameter "acknowledgeLicense" of action != ""}
          
          // Input custom feature set
          action parameter query "features" with description "Enter the MATLAB features you wish to install, separated by a [space] character. Example: %22MATLAB 5G_Toolbox%22" AND WITH DEFAULT VALUE "MATLAB"
          
          // Set variables
          parameter "tmpFolderName"="%short_release%"
          parameter "tmpFolderPath"="{"/tmp/" & (parameter "tmpFolderName" of action)}"
          
          parameter "licensePath"="{(parameter "tmpFolderPath" of action) & "/network.lic"}"
          parameter "inputsPath"="{(parameter "tmpFolderPath" of action) & "/inputs.txt"}"
          parameter "logPath"="{(parameter "tmpFolderPath" of action) & "/matlab_install.log"}"
          parameter "finalLogPath"="{((pathname of folder "__Global/Logs" of parent folder of client folder of current site) & "/matlab_install" & (((year of it as string) & (month of it as two digits as string ) & (day_of_month of it as two digits as string)) of date (local time zone) of now) & ".log") }"
          
          // Copy dmg contents to tmp folder
          folder delete "{parameter "tmpFolderPath" of action}"
          folder create "{parameter "tmpFolderPath" of action}"
          
          wait /usr/bin/hdiutil attach -quiet -nobrowse -noverify "__Download/%bes_filename%" -mountpoint "/Volumes/%short_release%"
          wait /bin/cp -Rfp "/Volumes/%short_release%" "/tmp"
          
          wait /usr/bin/hdiutil detach -force "/Volumes/%short_release%"
          
          // Delete dmg to free up space prior to installing
          delete "__Download/%bes_filename%"
          
          // Create network license
          action uses file encoding us-ascii
          appendfile SERVER S9-MATHLM1.ad.psu.edu 005056918B99 27000
          appendfile USE_SERVER
          appendfile
          
          // Move License file to tmp folder
          delete {parameter "licensePath" of action}
          move __appendfile {parameter "licensePath" of action}
          
          
          // Create Installer_Inputs
          createfile until ___EOF___
          
          destinationFolder=/Applications
          fileInstallationKey=%file_installation_key%
          agreeToLicense=yes
          outputFile={parameter "logPath" of action}
          licensePath={parameter "licensePath" of action}
          mode=silent
          automatedModeTimeout=1500
          lmgrFiles=false
          lmgrService=false
          
          ## The following features will be installed
          
          {concatenation "%0D%0A" of ("product." & (it as trimmed string)) OF substrings separated by " " of (parameter "features" of action)}
          
          
          ___EOF___
          
          // Move inputs file to tmp folder
          delete "{parameter "inputsPath" of action}"
          move __createfile "{parameter "inputsPath" of action}"
          action uses file encoding local
          wait /usr/bin/touch {parameter "logPath" of action}
          
          // Set permissions on tmp folder
          wait /bin/chmod -R a+x {parameter "tmpFolderPath" of action}
          wait /bin/chmod -R 755 {parameter "tmpFolderPath" of action}
          
          // Run installer
          wait "{(parameter "tmpFolderPath" of action ) & "/install"}" -inputFile "{parameter "inputsPath" of action}"
          
          // Move Log File to BES Logs
          delete "{parameter "finalLogPath" of action}"
          copy "{parameter "logPath" of action}" "{parameter "finalLogPath" of action}"
          
          //Remove tmp folder
          wait /bin/rm -rf "{parameter "tmpFolderPath" of action}"
          
          // Software Sharing Tracking
          wait /bin/sh -c "/usr/bin/defaults write '/Library/Sysman/Sysman' 'Tasks' -array-add 'PSU/Licensed/Software - Install/Upgrade: Mathworks MATLAB %release% - macOS -- Full Install - {(month of it as two digits & "/" & day_of_month of it as two digits & "/" & year of it as string) of date (local time zone) of now}'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman/Sysman.plist'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman'"
        Description:
          - ''
          - Install/Upgrade
          - ' with a custom defined feature set.'
    bes_additionalmimefields:
      x-app-platform: macOS
      x-app-title: '%SHORTNAME%'
      x-app-vendor: The MathWorks, Inc.
      x-app-version: '%version%'
      x-fixlet-swdDeployCategory: Install
      x-fixlet-taskType: install
    bes_category: '%OfferCategory%'
    bes_description: |
      <FONT size=3><STRONG>About</STRONG> %NAME%</FONT>
      <BLOCKQUOTE>MATLAB® combines a desktop environment tuned for iterative analysis and design processes with a programming language that expresses matrix and array mathematics directly. It includes the Live Editor for creating scripts that combine code, output, and formatted text in an executable notebook.</BLOCKQUOTE>
      <P><FONT color=#0080ff size=3><STRONG>Licensing</STRONG></FONT></P>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr><P>%LICENSE%</P></BLOCKQUOTE>
      <STRONG><P><FONT size=3>About This Task</FONT></P></STRONG>
      <BLOCKQUOTE>This task will install/upgrade: %SHORTNAME%.<BR><BR>This task is applicable on: macOS. </BLOCKQUOTE>
      <P><FONT size=3><STRONG>Action Descriptions</STRONG></FONT></P>
      <UL><LI><FONT size=2><STRONG>Action1: Install/Upgrade %SHORTNAME% with all available features.</STRONG></FONT></LI></UL>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr>
      <P><FONT size=2>This action installs %SHORTNAME% with the complete set of features available using the vendor installer and configures the application to use network licensing provided by the centralized University License Manager.</FONT></P></BLOCKQUOTE>
      <UL><LI><FONT size=2><STRONG>Action2: Install/Upgrade %SHORTNAME% with no add-on features.</STRONG></FONT></LI></UL>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr>
      <P><FONT size=2>This action performs a minimal installation of %SHORTNAME% and configures the application to use network licensing provided by the centralized University License Manager.</FONT></P></BLOCKQUOTE>
      <UL><LI><FONT size=2><STRONG>Action3: Install/Upgrade %SHORTNAME% with a custom defined feature set.</STRONG></FONT></LI></UL>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr>
      <P><FONT size=2>This action installs %SHORTNAME%, but prompts the operator for a list of features to install. It also configures the application to use network licensing provided by the centralized University License Manager.</FONT></P></BLOCKQUOTE>
      <UL><LI><FONT size=2><STRONG>Action10: Make available in Self Service.</STRONG></FONT></LI></UL>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr>
      <P><FONT size=2>This action performs the same action as Action1 with Self Service deployment options set.</FONT></P></BLOCKQUOTE>
    bes_ssa: 'True'
    bes_ssaaction: Action1
    bes_relevance:
      - mac of operating system
      - system version >= "10.11"
      - not (member of group 279275 of sites /*CLM_MAC*/)
      - not exists applications whose (name of it as lowercase starts with "matlab" and (preceding text of last ")" of following text of last "(" of (version of it as string)) as version >= "%version%" as version)
      - free space of drive of folder "/Applications" > 30000000000
    bes_title: 'Install/Upgrade: %NAME% %release% - macOS'
    bes_version: '%version%'
- Processor: Copier
  Arguments:
    destination_path: /Volumes/ManualUploads$/PSU-Mac/MathWorks/Deploy %NAME% %version%.bes
    overwrite: true
    source_path: '%bes_file%'
# Create BES file for CLM
- Processor: AutoPkgBESEngine
  Arguments:
    bes_actions:
      '1':
        ActionName: DefaultAction
        ActionNumber: Action1
        ActionScript: |
          
          // Confirm license purchase
          action parameter query "acknowledgeLicense" with description "By entering anything into this box, you acknowledge that required licenses have been purchased from Software @ PSU." AND WITH DEFAULT VALUE ""
          continue if {parameter "acknowledgeLicense" of action != ""}
          
          // Set variables
          parameter "tmpFolderName"="%short_release%"
          parameter "tmpFolderPath"="{"/tmp/" & (parameter "tmpFolderName" of action)}"
          
          parameter "licensePath"="{(parameter "tmpFolderPath" of action) & "/network.lic"}"
          parameter "inputsPath"="{(parameter "tmpFolderPath" of action) & "/inputs.txt"}"
          parameter "logPath"="{(parameter "tmpFolderPath" of action) & "/matlab_install.log"}"
          parameter "finalLogPath"="{((pathname of folder "__Global/Logs" of parent folder of client folder of current site) & "/matlab_install" & (((year of it as string) & (month of it as two digits as string ) & (day_of_month of it as two digits as string)) of date (local time zone) of now) & ".log") }"
          
          // Copy dmg contents to tmp folder
          folder delete "{parameter "tmpFolderPath" of action}"
          folder create "{parameter "tmpFolderPath" of action}"
          
          wait /usr/bin/hdiutil attach -quiet -nobrowse -noverify "__Download/%bes_filename%" -mountpoint "/Volumes/%short_release%"
          wait /bin/cp -Rfp "/Volumes/%short_release%" "/tmp"
          
          wait /usr/bin/hdiutil detach -force "/Volumes/%short_release%"
          
          // Delete dmg to free up space prior to installing
          delete "__Download/%bes_filename%"
          
          // Create network license
          action uses file encoding us-ascii
          appendfile SERVER S9-MATHLM1.ad.psu.edu 005056918B99 27000
          appendfile USE_SERVER
          appendfile
          
          // Move License file to tmp folder
          delete {parameter "licensePath" of action}
          move __appendfile {parameter "licensePath" of action}
          
          // Create Installer_Inputs
          createfile until ___EOF___
          
          destinationFolder=/Applications
          fileInstallationKey=%file_installation_key%
          agreeToLicense=yes
          outputFile={parameter "logPath" of action}
          licensePath={parameter "licensePath" of action}
          mode=silent
          automatedModeTimeout=1500
          lmgrFiles=false
          lmgrService=false
          
          ## The following features will be installed
          
          #product.5G_Toolbox
          #product.AUTOSAR_Blockset
          #product.Aerospace_Blockset
          #product.Aerospace_Toolbox
          #product.Antenna_Toolbox
          #product.Audio_Toolbox
          #product.Automated_Driving_Toolbox
          #product.Bioinformatics_Toolbox
          #product.Communications_Toolbox
          #product.Computer_Vision_Toolbox
          #product.Control_System_Toolbox
          #product.Curve_Fitting_Toolbox
          #product.DDS_Blockset
          #product.DO_Qualification_Kit
          #product.DSP_System_Toolbox
          #product.Data_Acquisition_Toolbox
          #product.Database_Toolbox
          #product.Datafeed_Toolbox
          #product.Deep_Learning_HDL_Toolbox
          #product.Deep_Learning_Toolbox
          #product.Econometrics_Toolbox
          #product.Embedded_Coder
          #product.Filter_Design_HDL_Coder
          #product.Financial_Instruments_Toolbox
          #product.Financial_Toolbox
          #product.Fixed-Point_Designer
          #product.Fuzzy_Logic_Toolbox
          #product.GPU_Coder
          #product.Global_Optimization_Toolbox
          #product.HDL_Coder
          #product.HDL_Verifier
          #product.IEC_Certification_Kit
          #product.Image_Acquisition_Toolbox
          #product.Image_Processing_Toolbox
          #product.Instrument_Control_Toolbox
          #product.LTE_Toolbox
          #product.Lidar_Toolbox
          #product.MATLAB
          #product.MATLAB_Coder
          #product.MATLAB_Compiler
          #product.MATLAB_Compiler_SDK
          #product.MATLAB_Parallel_Server
          #product.MATLAB_Production_Server
          #product.MATLAB_Report_Generator
          #product.MATLAB_Web_App_Server
          #product.Mapping_Toolbox
          #product.Mixed-Signal_Blockset
          #product.Model_Predictive_Control_Toolbox
          #product.Model-Based_Calibration_Toolbox
          #product.Motor_Control_Blockset
          #product.Navigation_Toolbox
          #product.OPC_Toolbox
          #product.Optimization_Toolbox
          #product.Parallel_Computing_Toolbox
          #product.Partial_Differential_Equation_Toolbox
          #product.Phased_Array_System_Toolbox
          #product.Polyspace_Bug_Finder
          #product.Polyspace_Bug_Finder_Server
          #product.Polyspace_Code_Prover
          #product.Polyspace_Code_Prover_Server
          #product.Powertrain_Blockset
          #product.Predictive_Maintenance_Toolbox
          #product.RF_Blockset
          #product.RF_Toolbox
          #product.ROS_Toolbox
          #product.Radar_Toolbox
          #product.Reinforcement_Learning_Toolbox
          #product.Risk_Management_Toolbox
          #product.Robotics_System_Toolbox
          #product.Robust_Control_Toolbox
          #product.Satellite_Communications_Toolbox
          #product.Sensor_Fusion_and_Tracking_Toolbox
          #product.SerDes_Toolbox
          #product.Signal_Processing_Toolbox
          #product.SimBiology
          #product.SimEvents
          #product.Simscape
          #product.Simscape_Driveline
          #product.Simscape_Electrical
          #product.Simscape_Fluids
          #product.Simscape_Multibody
          #product.Simulink
          #product.Simulink_3D_Animation
          #product.Simulink_Check
          #product.Simulink_Code_Inspector
          #product.Simulink_Coder
          #product.Simulink_Compiler
          #product.Simulink_Control_Design
          #product.Simulink_Coverage
          #product.Simulink_Design_Optimization
          #product.Simulink_Design_Verifier
          #product.Simulink_Desktop_Real-Time
          #product.Simulink_PLC_Coder
          #product.Simulink_Real-Time
          #product.Simulink_Report_Generator
          #product.Simulink_Requirements
          #product.Simulink_Test
          #product.SoC_Blockset
          #product.Spreadsheet_Link
          #product.Stateflow
          #product.Statistics_and_Machine_Learning_Toolbox
          #product.Symbolic_Math_Toolbox
          #product.System_Composer
          #product.System_Identification_Toolbox
          #product.Text_Analytics_Toolbox
          #product.UAV_Toolbox
          #product.Vehicle_Dynamics_Blockset
          #product.Vehicle_Network_Toolbox
          #product.Vision_HDL_Toolbox
          #product.WLAN_Toolbox
          #product.Wavelet_Toolbox
          #product.Wireless_HDL_Toolbox
          
          
          ___EOF___
          
          // Move inputs file to tmp folder
          delete "{parameter "inputsPath" of action}"
          move __createfile "{parameter "inputsPath" of action}"
          action uses file encoding local

          wait /usr/bin/touch {parameter "logPath" of action}
          
          // Set permissions on tmp folder
          wait /bin/chmod -R a+x {parameter "tmpFolderPath" of action}
          wait /bin/chmod -R 755 {parameter "tmpFolderPath" of action}
          
          // Run installer
          wait "{(parameter "tmpFolderPath" of action ) & "/install"}" -inputFile "{parameter "inputsPath" of action}"
          
          // Move Log File to BES Logs
          delete "{parameter "finalLogPath" of action}"
          copy "{parameter "logPath" of action}" "{parameter "finalLogPath" of action}"
          
          //Remove tmp folder
          wait /bin/rm -rf "{parameter "tmpFolderPath" of action}"
          
          // Software Sharing Tracking
          wait /bin/sh -c "/usr/bin/defaults write '/Library/Sysman/Sysman' 'Tasks' -array-add 'PSU/Licensed/Software - Install/Upgrade: Mathworks MATLAB %release% - macOS -- Full Install - {(month of it as two digits & "/" & day_of_month of it as two digits & "/" & year of it as string) of date (local time zone) of now}'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman/Sysman.plist'"
          wait /bin/sh -c "/bin/chmod 755 '/Library/Sysman'"
        Description:
          - ''
          - Install/Upgrade
          - ' with all available features'
    bes_additionalmimefields:
      x-app-platform: macOS
      x-app-title: '%SHORTNAME%'
      x-app-vendor: The MathWorks, Inc.
      x-app-version: '%version%'
      x-fixlet-swdDeployCategory: Install
      x-fixlet-taskType: install
    bes_category: '%OfferCategory%'
    bes_description: |
      <FONT size=3><STRONG>About</STRONG> %NAME%</FONT>
      <BLOCKQUOTE>MATLAB® combines a desktop environment tuned for iterative analysis and design processes with a programming language that expresses matrix and array mathematics directly. It includes the Live Editor for creating scripts that combine code, output, and formatted text in an executable notebook.</BLOCKQUOTE>
      <P><FONT color=#0080ff size=3><STRONG>Licensing</STRONG></FONT></P>
      <BLOCKQUOTE style="MARGIN-RIGHT: 0px" dir=ltr><P>%LICENSE%</P></BLOCKQUOTE>
      <STRONG><P><FONT size=3>About This Task</FONT></P></STRONG>
      <BLOCKQUOTE>This task will install/upgrade: %SHORTNAME%.<BR><BR>This task is applicable on: macOS. </BLOCKQUOTE>
      <P><FONT size=3><STRONG>Action Descriptions</STRONG></FONT></P>
      <UL><LI><FONT size=2><STRONG>Action1: Install/Upgrade %SHORTNAME% with all available features.</STRONG></FONT></LI></UL>
    bes_ssa: 'False'
    bes_ssaaction: Action1
    bes_relevance:
      - mac of operating system
      - system version >= "10.11"
      - member of group %clm_group_id% of site "CLM_MAC"
      - not exists applications whose (name of it as lowercase starts with "matlab" and (preceding text of last ")" of following text of last "(" of (version of it as string)) as version >= "%version%" as version)
      - free space of drive of folder "/Applications" > 30000000000
    bes_title: 'Install/Upgrade: CLM 2023-2024 %NAME% %release% - macOS'
    bes_version: '%version%'

- Processor: Copier
  Arguments:
    destination_path: /Volumes/ManualUploads$/PSU-Mac/MathWorks/Deploy %NAME% %version% - CLM.bes
    overwrite: true
    source_path: '%bes_file%'
- Processor: StopProcessingIf
  Arguments:
    predicate: |
      %dry_run% == True
# Import Task(s)
- Processor: BESImporter
  Arguments:
    bes_customsite: SysManDev
    bes_file: /Volumes/ManualUploads$/PSU-Mac/MathWorks/Deploy %NAME% %version%.bes
- Processor: StopProcessingIf
  Arguments:
    predicate: |
      %skip_clm% == True
- Processor: BESImporter
  Arguments:
    bes_customsite: SysManDev
    bes_file: /Volumes/ManualUploads$/PSU-Mac/MathWorks/Deploy %NAME% %version% - CLM.bes